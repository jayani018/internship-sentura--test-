/**
 * Gets the next positioned child relative to the element.
 *
 * @param {Element} el - Reference element in the scrollable area
 * @returns Element
 */
export function getNextPositionedChild(el: Element): Element | undefined;
/**
 * Finds the nearest scrollable area. Defaults to document.scrollingElement.
 *
 * @param {Element?} element - Reference element in the scrollable area
 * @param {boolean} [includeHidden=false] - Treat elements with `overflow: hidden` as scrollable areas.
 * @returns Element
 */
export function getScrollParent(element: Element | null, includeHidden?: boolean | undefined): Element | null;
/**
 * Checks if a parent scroll container is scrolled to bottom
 * @param {Element?} element
 * @param {number} [bottomThreshold=128] - Nearby limit for the bottom. Needs to be at least 1 to catch float calculation errors.
 * @returns boolean
 */
export function isParentAtBottom(element: Element | null, bottomThreshold?: number | undefined): boolean;
/**
 * Scrolls a parent scroll container to the bottom using a reference element in the scrollable area.
 *
 * @param {Element?} element - Element in the scroll area
 * @param {boolean} [smooth] - Use smooth scrolling instead of instant scrolling
 */
export function scrollParentToBottom(element: Element | null, smooth?: boolean | undefined): Promise<void>;
